import{setupVue}from"../../setup.js";import{player}from"../../player.js";import{DATA,TICK_DATA}from"../../tmp.js";import{Buyable,BUYABLES,getBuyable,getBuyableEff,getUpgradeEff,hasUpgrade}from"../../components/buyables.js";import{createChainedMulti,createMultiplicativeMulti,createUpgradeMulti}from"../../components/gainMulti.js";import{Resource,RESOURCES}from"../../components/resources.js";import{TABS}from"../../components/tabs.js";import{format,formatTime}from"../../utils/format.js";import Decimal,{D}from"../../utils/break_eternity.js";import{random}from"../../utils/utils.js";import{mineBlock}from"./blocks.js";import{isBlockExposed}from"./quarry.js";class Miner extends Buyable{constructor(e){super(e),this.x=e.x,this.dmgMultiplier=createChainedMulti((t=>e.eff(t??this.amt,this.x)),createMultiplicativeMulti(createUpgradeMulti({group:"GreenPapers",id:0,type:"multiply"})),createMultiplicativeMulti(createUpgradeMulti({group:"GreenPapers",id:7,type:"multiply"}))),this.speedMultiplier=createChainedMulti((()=>this.speed),createMultiplicativeMulti({toMultiply:()=>getUpgradeEff("GreenPapers",1),enabled:()=>hasUpgrade("GreenPapers",1),name:"Speed Mining"})),this._eff=e.eff,this.eff=e=>this.dmgMultiplier.value(e),this.select=e.select??((e,t,a)=>isBlockExposed(e,t)),this.progress=Decimal.dZero,this.speed=e.speed||1,this.diffDesc="damage/hit"}hit(e){if(Decimal.eq(this.player[this.name.toLowerCase()]??0,0))return;const t=this.speedMultiplier.value();this.progress=this.progress.plus(Decimal.mul(t,e));const a=this.progress.floor();if(a.lt(1))return;let r;this.progress=this.progress.sub(a),player.stats.hits=a.add(player.stats.hits);const i=[];for(const e of player.quarry.map.keys())for(const t of player.quarry.map[e].keys()){const a=player.quarry.map[e][t];Decimal.gt(a.health,0)&&this.select(t,e,a)&&i.push([t,e])}i.length&&(r=random(i),mineBlock(r[0],r[1],getMinerEff(this.x).mul(a)))}}setupVue.miner={props:["value"],template:'\n    <div class="buyable" v-if="key_data.unl()">\n      <div :role="key_data.name.toLowerCase()">\n        <b>({{format(key.amt.value, 0)}}×) {{key_data.name}}</b><br>\n        <span>\n          <gain-multi :multi="key_data.dmgMultiplier">\n            {{format(key.eff.value)}} damage/hit\n          </gain-multi> × \n          <gain-multi :multi="key_data.speedMultiplier">\n            {{format(\n              key_data.speedMultiplier.value()\n            )}} hits/sec\n          </gain-multi><br>{{key_data.desc(key.eff.value)}}\n        </span>\n      </div>\n      <div>\n        <button @click="key_data.buy()" \n        :class="{\n          canbuy: key_data.canBuy(), \n          cannotbuy: !key_data.canBuy()\n        }">\n          <b>{{key_group.buyPhrase ?? "Buy"}} +1</b><br>\n          {{\n            (Decimal.gt(key.levelDiff.value, 0) ? "+" : "")\n             + format(key.levelDiff.value)\n          }} {{key_data.diffDesc}}<br>\n          {{format(key.cost.value)}} {{key_data.res.name}}\n        </button>\n      </div>\n    </div>\n  ',setup(e){const t=DATA.buyables.Miners[e.value],a=BUYABLES.Miners;return{key:t,key_group:a,key_data:a.data[e.value],format:format,Decimal:Decimal}}};export function getMiner(e){return getBuyable("Miners",e)}export function getMinerEff(e){return getBuyableEff("Miners",e)}TICK_DATA.miners=function(e){player.miners.manualCooldown=Math.max(player.miners.manualCooldown-e,0)},RESOURCES.mana=new Resource({name:"Mana",color:"blue",src:{parent:()=>player.miners,id:"mana"},prodFunc:()=>D(1e3).pow(D(player.quarry.depth).div(50)).sub(1).div(100),based:"Quarry Depth"}),BUYABLES.Miners={res:"mana",player:()=>player.miners.amt,data:[new Miner({name:"Novice Miner",cost:e=>D(e).eq(0)?D(0):e.pow(4).add(9),eff:e=>D(e),desc:e=>"to 1 exposed block",group:"Miners",x:0}),new Miner({name:"Stone Miner",cost:e=>e.add(1).pow(4).add(9),eff:e=>D(e).mul(2),desc:e=>"to 1 exposed non-ore block",select:(e,t,a)=>isBlockExposed(e,t)&&!a.ore,unl:()=>getMiner(0).amt.gte(1),group:"Miners",speed:.65,x:1}),new Miner({name:"Veining Miner",cost:e=>e.add(1).pow(4).mul(2).add(98),eff:e=>D(e).mul(2),desc:e=>"to 1 block on the highest layer",select:(e,t,a)=>0===t||"0"===t,unl:()=>getMiner(1).amt.gte(1),group:"Miners",speed:.8,x:2}),new Miner({name:"Efficient Miner",cost:e=>e.add(1).pow(4).mul(4).add(996),eff:e=>D(e),desc:e=>"to 1 exposed ore block",select:(e,t,a)=>isBlockExposed(e,t)&&a.ore,unl:()=>getMiner(2).amt.gte(1),group:"Miners",speed:3,x:3}),new Miner({name:"Ranged Miner",cost:e=>e.add(1).pow(4).mul(8).add(9992),eff:e=>D(e).mul(5),desc:e=>"to 1 exposed block + 1/2 damage to 4 adjacent blocks",unl:()=>getMiner(3).amt.gte(1),group:"Miners",speed:.125,x:4})]},TABS.Miners={component:{template:""}},setupVue.miners={template:'\n  <div>\n    <resource name="mana" /><br>\n    <div class="buyables" align=center>\n      <miner v-for="(_, key) in BUYABLES.Miners.data" :value="key" />\n    </div><br>\n  </div>\n  ',setup:()=>({BUYABLES:BUYABLES,player:player,formatTime:formatTime})};
