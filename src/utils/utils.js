import Decimal,{D}from"./break_eternity.js";export function random(t){return t[Math.floor(Math.random()*t.length)]}export function countDecimals(t){let e=(t=new Decimal(t)).toString();return t.lt(1e-4)?0:t.floor().neq(t)&&e.split(".")[1].length||0}export function getRarity(t){const e=["Common","Uncommon","Rare","Unique","Epic","Legendary","Mythical","Divine","Almighty"];return e[Math.min(Math.max(Math.floor(2*Math.log10(t)-1),0),e.length-1)]}export function isRarity(t,e){return getRarity(t.rarity)===e}Decimal.prototype.modular=Decimal.prototype.mod=function(t){return(t=new Decimal(t)).eq(0)?new Decimal(0):this.sign*t.sign==-1?this.abs().mod(t.abs()).neg():-1===this.sign?this.abs().mod(t.abs()):this.sub(this.div(t).floor().mul(t))};export function createLazyProxy(t,e={}){const n=e;let r=!1;function o(){return r||(Object.assign(n,t(n)),r=!0),n}return new Proxy(n,{get:(t,e)=>o()[e],set:(t,e,n)=>(o()[e]=n,!0),has:(t,e)=>Reflect.has(o(),e),ownKeys:()=>Reflect.ownKeys(o()),getOwnPropertyDescriptor:(e,o)=>(r||(Object.assign(n,t(n)),r=!0),Object.getOwnPropertyDescriptor(e,o))})}export function applyScaling(t,e,n){return t=D(t),e=D(e),n=D(n),t>e?t.pow(n).times(e.pow(Decimal.dOne.sub(n))):t}
