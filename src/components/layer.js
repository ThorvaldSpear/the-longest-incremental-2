import{D}from"../utils/break_eternity.js";import{Resource}from"./resources.js";import{player}from"../../player.js";export const LAYERS=[];export class Layer{constructor({name:e,currency:t,gainFormula:r,playerIndex:a,miscData:s,doPrestige:i=function(){},resetFunc:n=function(){},statsRecord:o={}}){this.name=e,this.gainFormula=r,this.playerIndex=a,this.miscData=s,this.doPrestige=i,this.resetFunc=n,this.statsRecord=o,LAYERS.push(this),new Resource({name:t,src:{parent:e=>this,src:"amt"}})}get player(){return player?.[this.playerIndex]}get amount(){return this.player.amt}get gain(){return this.gainFormula()}playerLayer(){return{upgrades:[],milestones:[],challenges:[],stats:{time:0,times:0,restart:0,history:[],max:0},...this.miscData()}}gainCurrency(){const e=this.player;this.gainFormula&&(e.amt=D(e.amt??0).add(this.gain))}doPrestige(){}}function layerExist(e){return void 0!==player?.[LAYERS[e].playerIndex]}function layerUnl(e){return layerPlayer(e)?.did}function layerGot(e){return getHighestLayer()>=e}function layerPlayer(e){return player?.[LAYERS[e].playerIndex]}function setupLayer(e){let t=LAYERS[e].playerLayer();return player[LAYERS[e].playerIndex]=t,t}function doLayerReset(e,t){if(!t){const t=layerExist(e)?t(e):setupLayer(e);t.did=!0}for(let r=e;r>0;r--){if(recordLayerStats(e,r,t),r>1&&layerExist(r-1)){const e=layerPlayer(r-1);delete e.amt,delete e.did}LAYERS[r].resetFunc()}}function recordLayerStats(e,t,r){const a=layerPlayer(t).stats;if(e>t&&(r=!0,a.max=0),!r){const e=Object.assign(LAYERS[t].statsRecord.reset(),{time:a.time});a.stats.history.push(e),player.stats.history.push([t,e])}a.time=0,a[r?"restart":"times"]++}function getHighestLayer(){for(let e=LAYERS.length-1;e>=0;e--)if(layerUnl(e))return e;return 0}function recordLayerStatsTick(e,t,r){if(!layerExist(e))return;const a=layerPlayer(e).stats;a.time+=t,a.max=D(player.points).max(a.max),LAYERS[e].statsRecord.tick()}
