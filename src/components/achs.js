import{D}from"../utils/break_eternity.js";import{notify}from"../utils/notify.js";import{player}from"../player.js";import{DATA}from"../tmp.js";import{hasUpgrade}from"./buyables.js";import{setupVue}from"../setup.js";import{TABS}from"./tabs.js";export class Achievement{constructor({id:e,title:t,tooltip:i,condition:n,onGive:o}){this.id=e,this.title=t,this.tooltip=i,this.condition=n,this.onGive=o??function(){},ACH_ROWS=Math.max(ACH_ROWS,Math.ceil(e/10))}has(){return player.ach.includes(this.id)}give(e=!1){this.has()||(e||this.condition())&&(notify("Achievement got! "+this.title),player.ach.push(this.id),this.onGive())}}let ACH_ROWS=0,ACH_LIST=[new Achievement({id:0,title:"Welcome!",tooltip:"Start this game.",condition:()=>!0}),new Achievement({id:1,title:"Your First Gem!",tooltip:"Obtain 1 Bronze.",condition:()=>DATA.resources.bronze.amt.value.gte(1)}),new Achievement({id:2,title:"Digging the Surface",tooltip:"Reach Quarry Depth 5.",condition:()=>D(player.quarry.depth).gte(5)}),new Achievement({id:3,title:"Upgraded",tooltip:"Spend your first Green Papers for an Upgrade.",condition:()=>hasUpgrade("GreenPapers",0)}),new Achievement({id:4,title:"Money Bag",tooltip:"Get 1,000 Green Papers.",condition:()=>DATA.resources.greenPaper.amt.value.gte(1e3)}),new Achievement({id:5,title:"Treasure Hunter!",tooltip:"Obtain a Treasure.",condition:()=>player.stats.treasures>0}),new Achievement({id:6,title:"Hard Hitter",tooltip:"Hit 10,000 Blocks.",condition:()=>D(player.stats.hits).gte(1e4)}),new Achievement({id:7,title:"Map Clear",tooltip:"Clear an Row in a Map.",condition:()=>player.stats.mapRows>0}),new Achievement({id:8,title:"Millionaire",tooltip:"Get 1.00 M Green Papers.",condition:()=>DATA.resources.greenPaper.amt.value.gte(1e6)}),new Achievement({id:9,title:"Billionaire",tooltip:"Get 1.00 B Green Papers.",condition:()=>DATA.resources.greenPaper.amt.value.gte(1e9)})];export function achInterval(){for(const e of ACH_LIST)e.give()}TABS.Achievements={component:{template:'<div>\n      Achievements: {{ACH_GOT}} / {{ACH_COUNT}} ({{(ACH_GOT / ACH_COUNT * 100).toFixed(2)}}%)\n      <table>\n        <tr v-for="row in ACH_ROWS">\n          <td v-for="col in 10">\n            <ach :ach-id="(row - 1) * 10 + (col - 1)"/>\n          </td>\n        </tr>\n      </table>\n    </div>',setup:()=>({ACH_ROWS:ACH_ROWS,ACH_COUNT:ACH_LIST.length,ACH_GOT:player.ach.length})}},setupVue.ach={props:["achId"],template:'<div v-if="ach"\n  :class="{\n    ach: true,\n    tooltip: true,\n    incomplete: !ach.has(), \n    completed: ach.has()\n  }">\n    {{ach.title}}\n    <span class="tooltiptext">{{ach.tooltip}}</span>\n  </div>',setup:e=>({ach:ACH_LIST[e.achId]})};
